import zio.json._

case class Payload(
    latitude: Double,
    longitude: Double,
    hourly: Data,
    @jsonField("hourly_units") units: Map[String, String]
)

object Payload {
  implicit val decoder: JsonDecoder[Payload] = DeriveJsonDecoder.gen[Payload]
}

case class Data(
    @jsonField("time") dates: Seq[String],
    @jsonField("temperature_2m") values: Seq[Double]
) {
  // combine dates and values sequences and produce a list of pairs
  def toList: List[(String, Double)] = (dates zip values).toList
}

object Data {
  implicit val decoder: JsonDecoder[Data] = DeriveJsonDecoder.gen[Data]
}

val body = """{
    "latitude": 52.52,
    "longitude": 13.419998,
    "generationtime_ms": 0.0629425048828125,
    "utc_offset_seconds": 0,
    "timezone": "GMT",
    "timezone_abbreviation": "GMT",
    "elevation": 38.0,
    "hourly_units": {
        "time": "iso8601",
        "temperature_2m": "Â°C"
    },
    "hourly": {
        "time": [
            "2024-01-09T00:00",
            "2024-01-09T01:00",
            "2024-01-09T02:00",
            "2024-01-09T03:00",
            "2024-01-09T04:00",
            "2024-01-09T05:00",
            "2024-01-09T06:00",
            "2024-01-09T07:00",
            "2024-01-09T08:00",
            "2024-01-09T09:00",
            "2024-01-09T10:00",
            "2024-01-09T11:00",
            "2024-01-09T12:00",
            "2024-01-09T13:00",
            "2024-01-09T14:00",
            "2024-01-09T15:00",
            "2024-01-09T16:00",
            "2024-01-09T17:00",
            "2024-01-09T18:00",
            "2024-01-09T19:00",
            "2024-01-09T20:00",
            "2024-01-09T21:00",
            "2024-01-09T22:00",
            "2024-01-09T23:00",
            "2024-01-10T00:00",
            "2024-01-10T01:00",
            "2024-01-10T02:00",
            "2024-01-10T03:00",
            "2024-01-10T04:00",
            "2024-01-10T05:00",
            "2024-01-10T06:00",
            "2024-01-10T07:00",
            "2024-01-10T08:00",
            "2024-01-10T09:00",
            "2024-01-10T10:00",
            "2024-01-10T11:00",
            "2024-01-10T12:00",
            "2024-01-10T13:00",
            "2024-01-10T14:00",
            "2024-01-10T15:00",
            "2024-01-10T16:00",
            "2024-01-10T17:00",
            "2024-01-10T18:00",
            "2024-01-10T19:00",
            "2024-01-10T20:00",
            "2024-01-10T21:00",
            "2024-01-10T22:00",
            "2024-01-10T23:00",
            "2024-01-11T00:00",
            "2024-01-11T01:00",
            "2024-01-11T02:00",
            "2024-01-11T03:00",
            "2024-01-11T04:00",
            "2024-01-11T05:00",
            "2024-01-11T06:00",
            "2024-01-11T07:00",
            "2024-01-11T08:00",
            "2024-01-11T09:00",
            "2024-01-11T10:00",
            "2024-01-11T11:00",
            "2024-01-11T12:00",
            "2024-01-11T13:00",
            "2024-01-11T14:00",
            "2024-01-11T15:00",
            "2024-01-11T16:00",
            "2024-01-11T17:00",
            "2024-01-11T18:00",
            "2024-01-11T19:00",
            "2024-01-11T20:00",
            "2024-01-11T21:00",
            "2024-01-11T22:00",
            "2024-01-11T23:00",
            "2024-01-12T00:00",
            "2024-01-12T01:00",
            "2024-01-12T02:00",
            "2024-01-12T03:00",
            "2024-01-12T04:00",
            "2024-01-12T05:00",
            "2024-01-12T06:00",
            "2024-01-12T07:00",
            "2024-01-12T08:00",
            "2024-01-12T09:00",
            "2024-01-12T10:00",
            "2024-01-12T11:00",
            "2024-01-12T12:00",
            "2024-01-12T13:00",
            "2024-01-12T14:00",
            "2024-01-12T15:00",
            "2024-01-12T16:00",
            "2024-01-12T17:00",
            "2024-01-12T18:00",
            "2024-01-12T19:00",
            "2024-01-12T20:00",
            "2024-01-12T21:00",
            "2024-01-12T22:00",
            "2024-01-12T23:00",
            "2024-01-13T00:00",
            "2024-01-13T01:00",
            "2024-01-13T02:00",
            "2024-01-13T03:00",
            "2024-01-13T04:00",
            "2024-01-13T05:00",
            "2024-01-13T06:00",
            "2024-01-13T07:00",
            "2024-01-13T08:00",
            "2024-01-13T09:00",
            "2024-01-13T10:00",
            "2024-01-13T11:00",
            "2024-01-13T12:00",
            "2024-01-13T13:00",
            "2024-01-13T14:00",
            "2024-01-13T15:00",
            "2024-01-13T16:00",
            "2024-01-13T17:00",
            "2024-01-13T18:00",
            "2024-01-13T19:00",
            "2024-01-13T20:00",
            "2024-01-13T21:00",
            "2024-01-13T22:00",
            "2024-01-13T23:00",
            "2024-01-14T00:00",
            "2024-01-14T01:00",
            "2024-01-14T02:00",
            "2024-01-14T03:00",
            "2024-01-14T04:00",
            "2024-01-14T05:00",
            "2024-01-14T06:00",
            "2024-01-14T07:00",
            "2024-01-14T08:00",
            "2024-01-14T09:00",
            "2024-01-14T10:00",
            "2024-01-14T11:00",
            "2024-01-14T12:00",
            "2024-01-14T13:00",
            "2024-01-14T14:00",
            "2024-01-14T15:00",
            "2024-01-14T16:00",
            "2024-01-14T17:00",
            "2024-01-14T18:00",
            "2024-01-14T19:00",
            "2024-01-14T20:00",
            "2024-01-14T21:00",
            "2024-01-14T22:00",
            "2024-01-14T23:00",
            "2024-01-15T00:00",
            "2024-01-15T01:00",
            "2024-01-15T02:00",
            "2024-01-15T03:00",
            "2024-01-15T04:00",
            "2024-01-15T05:00",
            "2024-01-15T06:00",
            "2024-01-15T07:00",
            "2024-01-15T08:00",
            "2024-01-15T09:00",
            "2024-01-15T10:00",
            "2024-01-15T11:00",
            "2024-01-15T12:00",
            "2024-01-15T13:00",
            "2024-01-15T14:00",
            "2024-01-15T15:00",
            "2024-01-15T16:00",
            "2024-01-15T17:00",
            "2024-01-15T18:00",
            "2024-01-15T19:00",
            "2024-01-15T20:00",
            "2024-01-15T21:00",
            "2024-01-15T22:00",
            "2024-01-15T23:00"
        ],
        "temperature_2m": [
            -8.8,
            -8.9,
            -9.2,
            -9.8,
            -10.0,
            -10.2,
            -10.6,
            -10.6,
            -10.5,
            -9.9,
            -8.9,
            -7.7,
            -6.7,
            -5.8,
            -5.5,
            -5.7,
            -6.3,
            -6.8,
            -7.2,
            -7.3,
            -7.5,
            -7.6,
            -7.6,
            -7.7,
            -7.8,
            -7.8,
            -7.7,
            -7.8,
            -7.8,
            -7.9,
            -7.9,
            -7.9,
            -7.8,
            -7.1,
            -5.9,
            -4.7,
            -3.6,
            -2.9,
            -2.7,
            -3.2,
            -3.9,
            -4.5,
            -4.9,
            -5.1,
            -5.3,
            -5.5,
            -5.6,
            -5.8,
            -6.1,
            -6.1,
            -6.2,
            -6.3,
            -6.3,
            -6.3,
            -6.2,
            -5.9,
            -5.5,
            -4.8,
            -3.8,
            -3.2,
            -2.4,
            -1.8,
            -1.5,
            -1.6,
            -1.7,
            -1.7,
            -1.5,
            -1.3,
            -1.1,
            -1.0,
            -0.8,
            -0.6,
            -0.6,
            -0.6,
            -0.6,
            -0.7,
            -0.7,
            -0.9,
            -1.0,
            -1.1,
            -1.2,
            -1.1,
            -0.9,
            -0.5,
            -0.2,
            -0.3,
            -0.5,
            -0.6,
            -0.7,
            -0.7,
            -0.7,
            -0.5,
            -0.2,
            0.0,
            0.2,
            0.3,
            0.3,
            0.3,
            0.2,
            0.2,
            0.2,
            0.3,
            0.3,
            0.4,
            0.5,
            0.6,
            0.8,
            1.0,
            1.2,
            1.3,
            1.4,
            1.4,
            1.4,
            1.4,
            1.4,
            1.5,
            1.5,
            1.6,
            1.7,
            1.9,
            2.0,
            2.1,
            2.2,
            2.2,
            2.0,
            1.7,
            1.5,
            1.3,
            1.2,
            1.2,
            1.6,
            2.1,
            2.4,
            2.5,
            2.4,
            2.2,
            1.9,
            1.6,
            1.4,
            1.2,
            1.1,
            1.0,
            1.0,
            1.0,
            1.0,
            0.8,
            0.6,
            0.5,
            0.6,
            0.7,
            0.8,
            0.8,
            0.8,
            0.8,
            1.0,
            1.3,
            1.4,
            1.4,
            1.2,
            1.1,
            1.0,
            0.8,
            0.7,
            0.7,
            0.6,
            0.6,
            0.6,
            0.6
        ]
    }
}"""

body.fromJson[Payload] match
  case Left(error) =>
    println(s"An error occured: $error")
  case Right(payload) =>
    println(payload.units)
    println(payload.hourly.toList.head)